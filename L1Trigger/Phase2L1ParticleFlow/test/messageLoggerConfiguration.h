		std::string config =
			"import FWCore.ParameterSet.Config as cms\n"
			"process = cms.Process('testPatternFile')\n"
			"process.MessageLogger = cms.Service('MessageLogger',\n"
			"    FrameworkJobReport = cms.untracked.PSet(\n"
			"        FwkJob = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(10000000),\n"
			"            optionalPSet = cms.untracked.bool(True)\n"
			"        ),\n"
			"        default = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(0)\n"
			"        ),\n"
			"        optionalPSet = cms.untracked.bool(True)\n"
			"    ),\n"
			"    categories = cms.untracked.vstring(\n"
			"        'FwkJob',\n"
			"        'FwkReport',\n"
			"        'FwkSummary',\n"
			"        'Root_NoDictionary',\n"
			"        'L1TPFProducer',\n"
			"        'PatternFile',\n"
			"        'COEPatternFile',\n"
			"        'APxPatternFile'\n"
			"        'APxLinePair'\n"
			"        'testOutputFiles'\n"
			"        'testPatternFile'\n"
			"        'testAPxLinePair'\n"
			"    ),\n"
			"    cerr = cms.untracked.PSet(\n"
			"        FwkJob = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(0),\n"
			"            optionalPSet = cms.untracked.bool(True)\n"
			"        ),\n"
			"        FwkReport = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(10000000),\n"
			"            optionalPSet = cms.untracked.bool(True),\n"
			"            reportEvery = cms.untracked.int32(1000)\n"
			"        ),\n"
			"        FwkSummary = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(10000000),\n"
			"            optionalPSet = cms.untracked.bool(True),\n"
			"            reportEvery = cms.untracked.int32(1)\n"
			"        ),\n"
			"        INFO = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(0)\n"
			"        ),\n"
			"        Root_NoDictionary = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(0),\n"
			"            optionalPSet = cms.untracked.bool(True)\n"
			"        ),\n"
			"        default = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(10000000)\n"
			"        ),\n"
			"        noTimeStamps = cms.untracked.bool(False),\n"
			"        optionalPSet = cms.untracked.bool(True),\n"
			"        threshold = cms.untracked.string('INFO')\n"
			"    ),\n"
			"    cerr_stats = cms.untracked.PSet(\n"
			"        optionalPSet = cms.untracked.bool(True),\n"
			"        output = cms.untracked.string('cerr'),\n"
			"        threshold = cms.untracked.string('WARNING')\n"
			"    ),\n"
			"    cout = cms.untracked.PSet(\n"
			"        placeholder = cms.untracked.bool(True)\n"
			"    ),\n"
			"    debugModules = cms.untracked.vstring(),\n"
			"    debugs = cms.untracked.PSet(\n"
			"        placeholder = cms.untracked.bool(True)\n"
			"    ),\n"
			"    default = cms.untracked.PSet(\n"
			"\n"
			"    ),\n"
			"    destinations = cms.untracked.vstring(\n"
			"        'warnings',\n"
			"        'errors',\n"
			"        'infos',\n"
			"        'debugs',\n"
			"        'cout',\n"
			"        'cerr'\n"
			"    ),\n"
			"    errors = cms.untracked.PSet(\n"
			"        placeholder = cms.untracked.bool(True)\n"
			"    ),\n"
			"    fwkJobReports = cms.untracked.vstring('FrameworkJobReport'),\n"
			"    infos = cms.untracked.PSet(\n"
			"        Root_NoDictionary = cms.untracked.PSet(\n"
			"            limit = cms.untracked.int32(0),\n"
			"            optionalPSet = cms.untracked.bool(True)\n"
			"        ),\n"
			"        optionalPSet = cms.untracked.bool(True),\n"
			"        placeholder = cms.untracked.bool(True)\n"
			"    ),\n"
			"    statistics = cms.untracked.vstring('cerr_stats'),\n"
			"    suppressDebug = cms.untracked.vstring(),\n"
			"    suppressInfo = cms.untracked.vstring(),\n"
			"    suppressWarning = cms.untracked.vstring(),\n"
			"    warnings = cms.untracked.PSet(\n"
			"        placeholder = cms.untracked.bool(True)\n"
			"    )\n"
			")\n"
			"process.MessageLogger.categories.extend(['L1TPFProducer','PatternFile','COEPatternFile','APxPatternFile','APxLinePair','testOutputFiles','testPatternFile','testAPxLinePair'])\n";